name: Build and Deploy to Firebase/Cloud Run

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Set up Google Cloud SDK
      id: auth
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    - name: Create Artifact Registry repository if it doesn't exist
      run: |
        # Check if repository exists, create if not
        if ! gcloud artifacts repositories describe usermgr-repo --location=us-central1 &>/dev/null; then
          gcloud artifacts repositories create usermgr-repo \
            --repository-format=docker \
            --location=us-central1 \
            --description="Repository for Photography Web User Manager"
        fi

    - name: Authorize Docker for Artifact Registry
      run: |
        gcloud auth configure-docker us-central1-docker.pkg.dev

    - name: Create Dockerfile
      run: |
        cat > Dockerfile << 'EOL'
        FROM tomcat:9.0.1-jre8

        # Add servlet-api jar for Servlet 4.0.1
        RUN wget https://repo1.maven.org/maven2/javax/servlet/javax.servlet-api/4.0.1/javax.servlet-api-4.0.1.jar -P /usr/local/tomcat/lib/

        # Copy your application
        COPY . /tmp/app/
        RUN cp -r /tmp/app/*.war /usr/local/tomcat/webapps/ || echo "No WAR files found"
        
        # Remove default Tomcat apps
        RUN rm -rf /usr/local/tomcat/webapps/ROOT /usr/local/tomcat/webapps/examples /usr/local/tomcat/webapps/docs

        EXPOSE 8080
        CMD ["catalina.sh", "run"]
        EOL

    - name: Build and push Docker image
      run: |
        # Build the image
        docker build -t us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/usermgr-repo/photography-web-usermgr:${{ github.sha }} .
        
        # Push the image
        docker push us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/usermgr-repo/photography-web-usermgr:${{ github.sha }}

    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy photography-web-usermgr \
          --image us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/usermgr-repo/photography-web-usermgr:${{ github.sha }} \
          --platform managed \
          --region us-central1 \
          --allow-unauthenticated

    - name: Set up Firebase CLI
      run: npm install -g firebase-tools

    - name: Deploy Firebase configuration
      run: |
        firebase use ${{ secrets.FIREBASE_PROJECT_ID }} --token ${{ secrets.FIREBASE_TOKEN }}
        firebase deploy --only hosting --token ${{ secrets.FIREBASE_TOKEN }}
